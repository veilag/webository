import subprocess
from os import getenv

import requests
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery
from password_generator import PasswordGenerator
from sqlalchemy.ext.asyncio import AsyncSession

from src.callbacks import RequestApproveCallback
from src.crud import get_request_by_id

router = Router()
pwo = PasswordGenerator()


def add_subdomain(request):
    headers = {
        'Content-Type': 'application/json',
        'Authorization': 'Bearer ' + getenv('TIMEWEB_TOKEN'),
    }

    response = requests.post(
        f'https://api.timeweb.cloud/api/v1/domains/webository.ru/subdomains/{request.subdomain}',
        headers=headers,
    )

    print(response.json())

    json_data = {
        'type': 'A',
        'value': '213.171.12.197',
    }

    response = requests.post(
        f'https://api.timeweb.cloud/api/v1/domains/{request.subdomain}.webository.ru/dns-records', headers=headers,
        json=json_data
    )

    print(response.json())


@router.callback_query(RequestApproveCallback.filter(F.approve))
async def handle_approve_request(query: CallbackQuery, callback_data: RequestApproveCallback, session: AsyncSession, bot: Bot):
    request = await get_request_by_id(
        session=session,
        id=callback_data.request_id
    )

    await bot.send_message(chat_id=request.telegram_id, text="‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∞. –ù–∞—á–∏–Ω–∞—é –Ω–∞—Å—Ç—Ä–æ–π–∫—É –≤–∞—à–µ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞")
    process_message = await bot.send_message(chat_id=request.telegram_id, text="üîÑ –°–æ–∑–¥–∞—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")

    user_password = pwo.generate()
    subprocess.Popen([
        './scripts/user_setup.sh',
        request.username, user_password
    ])

    await process_message.edit_text("üîÑ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞—é –ø–æ–¥–¥–æ–º–µ–Ω")
    add_subdomain(request)

    await process_message.edit_text("üîÑ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é nginx –∏ –ø–æ–ª—É—á–∞—é —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç")

    subprocess.Popen([
        './scripts/nginx_setup.sh',
        f'{request.subdomain}.webository.ru', request.username
    ])

    await process_message.edit_text("üîÑ –°–æ–∑–¥–∞—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é gunicorn")

    subprocess.Popen([
        './scripts/gunicorn_setup.sh',
        request.username
    ])

    await process_message.edit_text(
        f"""‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω –∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—Ö–æ–¥–∞ üëâ
–õ–æ–≥–∏–Ω: {request.username}
–ü–∞—Ä–æ–ª—å: <span class="tg-spoiler">{user_password}</span>

‚Äî‚Äî‚Äî
–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–¥–∫–ª—é—á–∏—Ç—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É –Ω—É–∂–µ–Ω ssh –∫–ª–∏–µ–Ω—Ç, –æ–Ω —É–∂–µ –µ—Å—Ç—å, –µ—Å–ª–∏ —Ç—ã —Ä–∞–±–æ—Ç–∞–µ—à—å —Å –ª–∏–Ω—É–∫—Å–∞, —Ç–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É

<pre language="bash">
ssh user@webository.ru
</pre>
–≥–¥–µ user ‚Äî —Ç–≤–æ–π –ª–æ–≥–∏–Ω
""",
        parse_mode="HTML"
    )
